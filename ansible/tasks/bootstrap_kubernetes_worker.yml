---

- name: Install Prerequisites
  become: true
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - socat
      - conntrack
      - ipset

- name: Disable SWAP
  become: true
  ansible.builtin.shell: |
    swapoff -a
  changed_when: false

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  become: true
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Make Folders
  become: true
  ansible.builtin.file:
    state: directory
    path: "{{ directory }}"
    mode: "0640"
  loop:
    - /etc/cni/net.d
    - /opt/cni/bin
    - /var/lib/kubelet
    - /var/lib/kube-proxy
    - /var/lib/kubernetes
    - /var/run/kubernetes
    - /tmp/containerd
    - /etc/containerd/
  loop_control:
    loop_var: directory

- name: Template files
  become: true
  ansible.builtin.template:
    src: "{{ item  }}"
    dest: /home/adminuser/{{ item | basename | regex_replace('\\.j2$', '') }}
    mode: "0640"
  loop:
    - templates/10-bridge.conf.j2
    - templates/kubelet-config.yaml.j2

- name: Move kubelet-config to correct folder
  become: true
  ansible.builtin.copy:
    src: /home/adminuser/kubelet-config.yaml.j2
    dest: /var/lib/kubelet/kubelet-config.yaml
    mode: "0640"
    remote_src: true

- name: Move configs to cni folder
  become: true
  ansible.builtin.copy:
    src: /home/adminuser/10-bridge.conf.j2
    dest: /etc/cni/net.d/10-bridge.conf
    mode: "0640"
    remote_src: true

- name: Copy kube-proxy-config to worker
  become: true
  ansible.builtin.copy:
    src: files/configs/kube-proxy-config.yaml
    dest: /var/lib/kube-proxy/kube-proxy-config.yaml
    mode: "0640"

- name: Copy 99-loopback.conf
  become: true
  ansible.builtin.copy:
    src: files/configs/99-loopback.conf
    dest: /etc/cni/net.d/99-loopback.conf
    mode: "0640"

- name: Move kube configs
  become: true
  ansible.builtin.copy:
    src: files/units/kubelet.service
    dest: /var/lib/kubelet/kubelet.service
    mode: "0640"

- name: Copy service files
  become: true
  ansible.builtin.copy:
    src: files/units/{{ service_units }}
    dest: /etc/systemd/system/{{ service_units }}
    mode: "0640"
  loop_control:
    loop_var: service_units
  loop:
    - kubelet.service
    - kube-proxy.service
    - containerd.service

- name: Copy containerd config
  become: true
  ansible.builtin.copy:
    src: files/configs/containerd-config.toml
    dest: /etc/containerd/config.toml
    mode: "0640"

- name: Unarchive crictl
  become: true
  ansible.builtin.unarchive:
    src: downloads/crictl-v1.28.0-linux-amd64.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/crictl
    mode: +x

- name: Unarchive cni
  become: true
  ansible.builtin.unarchive:
    src: downloads/cni-plugins-linux-amd64-v1.3.0.tgz
    dest: /opt/cni/bin/
    mode: +x

- name: Copy Stuff
  become: true
  ansible.builtin.copy:
    src: downloads/{{ binary }}
    dest: /usr/local/bin/{{ binary }}
    mode: +x
  loop:
    - kube-proxy
    - kubectl
    - kubelet
  loop_control:
    loop_var: binary

- name: Copy runc
  become: true
  ansible.builtin.copy:
    src: downloads/runc.amd64
    dest: /usr/local/bin/runc
    mode: +x

- name: Unarchive containerd to temp folder
  become: true
  ansible.builtin.unarchive:
    src: downloads/containerd-1.7.8-linux-amd64.tar.gz
    dest: /tmp/containerd
    creates: /tmp/containerd/bin
    mode: +x

- name: Copy containerd bin
  become: true
  ansible.builtin.copy:
    src: /tmp/containerd/bin/
    dest: /bin/
    mode: +x
    remote_src: true

- name: Reload daemon
  become: true
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start services
  become: true
  ansible.builtin.systemd:
    name: "{{ service }}"
    state: started
    enabled: true
  loop:
    - containerd
    - kubelet
    - kube-proxy
  loop_control:
    loop_var: service

- name: Apply RBAC kubelet
  delegate_to: "{{ hostvars[groups['jumpbox'][0]]['ansible_host'] }}"
  become: true
  ansible.builtin.shell: kubectl get nodes --kubeconfig /var/lib/kubernetes/admin.kubeconfig
